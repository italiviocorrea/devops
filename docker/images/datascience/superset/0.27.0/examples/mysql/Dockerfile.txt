FROM python:3.6-slim
MAINTAINER Italivio Correa <icorrea@fazenda.ms.gov.br>

# Superset setup options
ENV SUPERSET_VERSION 0.27.0 \
    SUPERSET_HOME /superset \
    SUP_WEBSERVER_BIND=0.0.0.0:8088 \
    SUP_LIMIT_REQUEST_FIELD_SIZE=0 \
    SUP_ROW_LIMIT 5000 \
    SUP_WEBSERVER_THREADS 8 \
    SUP_WEBSERVER_PORT 8088 \
    SUP_WEBSERVER_TIMEOUT 60 \
    SUP_SECRET_KEY 'senha#123' \
    SUP_META_DB_URI "mysql://superset:superset@mysql:3306/superset" \
    SUP_CSRF_ENABLED True \
    PYTHONPATH $SUPERSET_HOME:$PYTHONPATH \
    ADMIN_USERNAME admin \
    ADMIN_FIRST_NAME admin \
    ADMIN_LAST_NAME user \
    ADMIN_EMAIL devops@fazenda.ms.gov.br \
    ADMIN_PWD superset 

ENV GUNICORN_CMD_ARGS="--workers ${SUP_WEBSERVER_THREADS} --timeout ${SUP_WEBSERVER_TIMEOUT} --bind ${SUP_WEBSERVER_BIND} --limit-request-line ${SUP_ROW_LIMIT} --limit-request-field_size ${SUP_LIMIT_REQUEST_FIELD_SIZE}"

# by default only includes PostgreSQL because I'm selfish
ENV DB_PACKAGES libpq-dev default-libmysqlclient-dev freetds-dev freetds-bin
ENV DB_PIP_PACKAGES impyla==0.14.0 \
        infi.clickhouse-orm==1.0.2 \
        mysqlclient==1.3.7 \
        psycopg2==2.6.1 \
        pyathena==1.2.5 \
        pyhive==0.5.1 \
        pyldap==2.4.28 \
        pymssql==2.1.3 \
        redis==2.10.5 \
        sqlalchemy-clickhouse==0.1.5.post0 \
        sqlalchemy-redshift==0.5.0 
    

RUN apt-get update \
    && apt-get install -y \
	build-essential \
	gcc \
  	libssl-dev \
	libffi-dev \
	libsasl2-dev \
	libldap2-dev \
    && pip install --no-cache-dir \
	$DB_PIP_PACKAGES \
	flask-appbuilder \
	superset==$SUPERSET_VERSION \
    && apt-get remove -y \
  	build-essential \
  	libssl-dev \
  	libffi-dev \
  	libsasl2-dev \
  	libldap2-dev \
    && apt-get -y autoremove 
    && apt-get clean 
    && rm -rf /var/lib/apt/lists/*

# install DB packages separately
RUN apt-get update 
    && apt-get install -y $DB_PACKAGES \
    && apt-get autoremove -y 
    && apt-get clean 
    && rm -rf /var/lib/apt/lists/*

# remove build dependencies
RUN mkdir $SUPERSET_HOME

# COPY superset-init.sh /superset-init.sh
# RUN chmod +x /superset-init.sh

VOLUME $SUPERSET_HOME
EXPOSE 8088

# since this can be used as a base image adding the file /docker-entrypoint.sh
# is all you need to do and it will be run *before* Superset is set up
ENTRYPOINT [ "/superset-init.sh" ]
